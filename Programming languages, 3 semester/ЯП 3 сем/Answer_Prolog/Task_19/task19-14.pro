encoding(utf8).

'мужчина'('Адам').
'мужчина'('Каин').
'мужчина'('Авель').
'мужчина'('Майкл').
'мужчина'('Моисей').
'мужчина'('Альберт').
'мужчина'('Эрнест').
'мужчина'('Гектор').
'мужчина'('Ганнибал').
'мужчина'('Александр').
'мужчина'('Филипп').

'женщина'('Ева').
'женщина'('Мадонна').
'женщина'('Мария').
'женщина'('Алиса').
'женщина'('Мэри').
'женщина'('Диана').
'женщина'('Сара').
'женщина'('Барбара').
'женщина'('Роза').
'женщина'('Алла').
'женщина'('Кристина').
'женщина'('Марианна').

'родитель'('Адам', 'Каин').
'родитель'('Адам', 'Авель').
'родитель'('Адам', 'Сара').
'родитель'('Моисей', 'Мэри').
'родитель'('Моисей', 'Майкл').
'родитель'('Каин', 'Алиса').
'родитель'('Каин', 'Диана').
'родитель'('Каин', 'Мадонна').
'родитель'('Майкл', 'Барбара').
'родитель'('Майкл', 'Гектор').
'родитель'('Майкл', 'Роза').
'родитель'('Майкл', 'Филипп').
'родитель'('Филипп', 'Кристина').
'родитель'('Ганнибал', 'Александр').
'родитель'('Ганнибал', 'Эрнест').
'родитель'('Александр', 'Альберт').
'родитель'('Альберт', 'Марианна').
'родитель'('Ева', 'Каин').
'родитель'('Ева', 'Авель').
'родитель'('Ева', 'Сара').
'родитель'('Сара', 'Мэри').
'родитель'('Сара', 'Майкл').
'родитель'('Мария', 'Алиса').
'родитель'('Мария', 'Гектор').
'родитель'('Мария', 'Диана').
'родитель'('Мария', 'Мадонна').
'родитель'('Мадонна', 'Барбара').
'родитель'('Мадонна', 'Роза').
'родитель'('Мадонна', 'Филипп').
'родитель'('Алла', 'Кристина').
'родитель'('Диана', 'Александр').
'родитель'('Барбара', 'Эрнест').
'родитель'('Барбара', 'Альберт').
'родитель'('Кристина', 'Марианна').


/* Y потомок X, когда X родитель Y(Z) 
   и уходим в рекурсивную проверку, 
   когда между потомком и предком
   больше одного человека */
'потомок'(Y,X) :- 'родитель'(X, Z), 'женщина'(Z)
                , 'потомок-n'(Y, Z).
/* Окончание, когда между X и Y больше нет людей */
'потомок-n'(Y,X) :- 'родитель'(X, Y).
/* Схожий с 'потомок', но для n-ного количества 
   людей между потомком и предком (n не учитывается) */
'потомок-n'(Y,X) :- 'родитель'(X, Z), 'женщина'(Z)
                  , 'потомок-n'(Y, Z).

subtask1(X) :- 'потомок'(Y, X), write(Y).


/* Y предок X, когда Y родитель X 
   и уходим в рекурсивную проверку, 
   когда между потомком и предком
   больше одного человека*/
'предок'(Y,X) :- 'родитель'(Z, X), 'мужчина'(Z)
               , 'предок-n'(Y, Z).
/* Окончание, когда между X и Y больше нет людей */
'предок-n'(Y,X) :- 'родитель'(Y, X).
/* Схожий с 'предок', но для n-ного количества 
   людей между потомком и предком (n не учитывается) */
'предок-n'(Y,X) :- 'родитель'(Z, X), 'мужчина'(Z)
                 , 'предок-n'(Y, Z).

subtask2(X) :- 'предок'(Y, X), write(Y).


/* Внук Y для прародителя X*/
'внук'(Y, X) :- 'мужчина'(Y), 'родитель'(X, Z)
              , 'родитель'(Z, Y).

subtask3(X) :- 'внук'(Y, X), write(Y).


/* свекровь Y для жены X */
'свекровь (мать мужа)'(Y, X) :- 'женщина'(X)
/*проверка на супружество Y и M, т.е. наличие общего рбёнка*/
                              , 'родитель'(X, C), 'родитель'(M, C)
                              , X \= M
/*свекровь Y это мать (женщина) мужа M*/
                              , 'родитель'(Y, M), 'женщина'(Y).

subtask4(X) :- 'свекровь (мать мужа)'(Y, X), write(Y).